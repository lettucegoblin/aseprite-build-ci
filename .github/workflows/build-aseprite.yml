name: Build Aseprite

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      aseprite_version:
        description: 'Aseprite version to build (e.g., v1.3.9)'
        required: false
        default: 'v1.3.9'

env:
  ASEPRITE_VERSION: ${{ github.event.inputs.aseprite_version || 'v1.3.9' }}
  SKIA_VERSION: 'm102-861e4743af'
  CMAKE_BUILD_TYPE: RelWithDebInfo

jobs:
  build:
    name: Build Aseprite on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022, windows-2025]  # windows-2025 is beta but available
        include:
          - os: windows-2022
            artifact_name: aseprite-windows-2022
          - os: windows-2025
            artifact_name: aseprite-windows-2025

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup MSVC Developer Command Prompt
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: Setup Ninja
      uses: seanmiddleditch/gha-setup-ninja@master

    # Alternative: Install specific CMake version if needed
    # - name: Setup CMake
    #   uses: lukka/get-cmake@latest
    #   with:
    #     cmakeVersion: "~3.24.0"
    #     ninjaVersion: "^1.11.0"

    - name: Cache Skia binaries
      id: cache-skia
      uses: actions/cache@v4
      with:
        path: deps/skia
        key: skia-${{ env.SKIA_VERSION }}-windows-x64

    - name: Download Skia binaries
      if: steps.cache-skia.outputs.cache-hit != 'true'
      shell: pwsh
      run: |
        Write-Host "Downloading Skia binaries..."
        New-Item -ItemType Directory -Force -Path deps/skia
        Set-Location deps/skia
        
        $skiaUrl = "https://github.com/aseprite/skia/releases/download/${{ env.SKIA_VERSION }}/Skia-Windows-Release-x64.zip"
        Write-Host "Downloading from: $skiaUrl"
        
        Invoke-WebRequest -Uri $skiaUrl -OutFile skia.zip -UseBasicParsing
        Expand-Archive -Path skia.zip -DestinationPath . -Force
        Remove-Item skia.zip
        
        Write-Host "Skia binaries downloaded and extracted"
        Get-ChildItem -Recurse | Select-Object -First 20

    - name: Cache Aseprite repository
      id: cache-aseprite
      uses: actions/cache@v4
      with:
        path: aseprite
        key: aseprite-repo-${{ env.ASEPRITE_VERSION }}-${{ hashFiles('**/build.bat') }}
        restore-keys: |
          aseprite-repo-${{ env.ASEPRITE_VERSION }}-
          aseprite-repo-

    - name: Clone Aseprite repository
      if: steps.cache-aseprite.outputs.cache-hit != 'true'
      shell: pwsh
      run: |
        Write-Host "Cloning Aseprite repository..."
        git clone --recursive https://github.com/aseprite/aseprite.git
        Set-Location aseprite
        git fetch --tags
        git checkout ${{ env.ASEPRITE_VERSION }}
        git submodule update --init --recursive
        Write-Host "Aseprite repository cloned and checked out to ${{ env.ASEPRITE_VERSION }}"

    - name: Configure Aseprite with CMake
      shell: pwsh
      run: |
        Write-Host "Configuring Aseprite build..."
        Set-Location aseprite
        
        if (Test-Path build) {
          Remove-Item -Recurse -Force build
        }
        New-Item -ItemType Directory -Force -Path build
        Set-Location build
        
        $skiaDir = "${{ github.workspace }}/deps/skia"
        $skiaLibDir = "${{ github.workspace }}/deps/skia/out/Release-x64"
        $skiaLib = "${{ github.workspace }}/deps/skia/out/Release-x64/skia.lib"
        
        Write-Host "Skia directory: $skiaDir"
        Write-Host "Skia library directory: $skiaLibDir"
        Write-Host "Skia library: $skiaLib"
        
        cmake .. `
          -G "Ninja" `
          -DCMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }} `
          -DLAF_BACKEND=skia `
          -DSKIA_DIR="$skiaDir" `
          -DSKIA_LIBRARY_DIR="$skiaLibDir" `
          -DSKIA_LIBRARY="$skiaLib" `
          -DCMAKE_C_COMPILER=cl `
          -DCMAKE_CXX_COMPILER=cl

    - name: Build Aseprite
      shell: pwsh
      run: |
        Write-Host "Building Aseprite..."
        Set-Location aseprite/build
        
        # Set Ninja status for progress tracking
        $env:NINJA_STATUS = "[%f/%t %o/sec] "
        
        ninja aseprite
        
        Write-Host "Build completed successfully!"
        Get-ChildItem -Path bin -Recurse | Select-Object FullName, Length

    - name: Package Aseprite binaries
      shell: pwsh
      run: |
        Write-Host "Packaging Aseprite binaries..."
        
        $sourceDir = "aseprite/build/bin"
        $destDir = "aseprite-binaries"
        
        if (Test-Path $destDir) {
          Remove-Item -Recurse -Force $destDir
        }
        
        Copy-Item -Path $sourceDir -Destination $destDir -Recurse
        
        # Create a README for the artifact
        @"
        Aseprite Build Information
        ==========================
        Version: ${{ env.ASEPRITE_VERSION }}
        Build Type: ${{ env.CMAKE_BUILD_TYPE }}
        Skia Version: ${{ env.SKIA_VERSION }}
        Built on: ${{ matrix.os }}
        Build Date: $(Get-Date -Format "yyyy-MM-dd HH:mm:ss")
        
        To run Aseprite, execute aseprite.exe from this directory.
        
        Note: This is an unofficial build. Consider purchasing Aseprite 
        from https://www.aseprite.org/ to support the developers.
        "@ | Out-File -FilePath "$destDir/BUILD_INFO.txt"
        
        Write-Host "Packaging complete"

    - name: Upload Aseprite artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}-${{ env.ASEPRITE_VERSION }}
        path: aseprite-binaries/
        retention-days: 30

    - name: Create Release (if tagged)
      if: startsWith(github.ref, 'refs/tags/')
      shell: pwsh
      run: |
        Write-Host "Compressing binaries for release..."
        Compress-Archive -Path aseprite-binaries/* -DestinationPath aseprite-${{ matrix.os }}-${{ env.ASEPRITE_VERSION }}.zip

    - name: Upload Release Assets (if tagged)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: aseprite-${{ matrix.os }}-${{ env.ASEPRITE_VERSION }}.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Optional: Build on multiple configurations
  build-configurations:
    name: Build Multiple Configurations
    runs-on: windows-2022
    strategy:
      matrix:
        build_type: [Release, Debug, RelWithDebInfo]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup MSVC Developer Command Prompt
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: Setup Ninja
      uses: seanmiddleditch/gha-setup-ninja@master

    - name: Cache Skia binaries
      id: cache-skia
      uses: actions/cache@v4
      with:
        path: deps/skia
        key: skia-${{ env.SKIA_VERSION }}-windows-x64

    - name: Download Skia binaries
      if: steps.cache-skia.outputs.cache-hit != 'true'
      shell: pwsh
      run: |
        New-Item -ItemType Directory -Force -Path deps/skia
        Set-Location deps/skia
        $skiaUrl = "https://github.com/aseprite/skia/releases/download/${{ env.SKIA_VERSION }}/Skia-Windows-Release-x64.zip"
        Invoke-WebRequest -Uri $skiaUrl -OutFile skia.zip -UseBasicParsing
        Expand-Archive -Path skia.zip -DestinationPath . -Force
        Remove-Item skia.zip

    - name: Clone and Build Aseprite
      shell: pwsh
      run: |
        # Clone Aseprite
        git clone --recursive https://github.com/aseprite/aseprite.git
        Set-Location aseprite
        git checkout ${{ env.ASEPRITE_VERSION }}
        git submodule update --init --recursive
        
        # Configure with CMake
        New-Item -ItemType Directory -Force -Path build
        Set-Location build
        
        cmake .. `
          -G "Ninja" `
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} `
          -DLAF_BACKEND=skia `
          -DSKIA_DIR="${{ github.workspace }}/deps/skia" `
          -DSKIA_LIBRARY_DIR="${{ github.workspace }}/deps/skia/out/Release-x64" `
          -DSKIA_LIBRARY="${{ github.workspace }}/deps/skia/out/Release-x64/skia.lib"
        
        # Build
        ninja aseprite

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: aseprite-${{ matrix.build_type }}-${{ env.ASEPRITE_VERSION }}
        path: aseprite/build/bin/
        retention-days: 7

  # Optional: Cross-platform build (experimental)
  cross-platform:
    name: Cross-platform Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          cmake ninja-build \
          libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev \
          libgl1-mesa-dev libglu1-mesa-dev \
          libfontconfig1-dev

    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install cmake ninja

    - name: Download Skia binaries
      shell: bash
      run: |
        mkdir -p deps/skia
        cd deps/skia
        
        if [[ "$RUNNER_OS" == "Linux" ]]; then
          SKIA_FILE="Skia-Linux-Release-x64-libc++.zip"
        elif [[ "$RUNNER_OS" == "macOS" ]]; then
          SKIA_FILE="Skia-macOS-Release-x64.zip"
        fi
        
        wget "https://github.com/aseprite/skia/releases/download/${{ env.SKIA_VERSION }}/${SKIA_FILE}"
        unzip "${SKIA_FILE}"
        rm "${SKIA_FILE}"

    - name: Build Aseprite
      shell: bash
      run: |
        # Clone and build Aseprite
        git clone --recursive https://github.com/aseprite/aseprite.git
        cd aseprite
        git checkout ${{ env.ASEPRITE_VERSION }}
        git submodule update --init --recursive
        
        mkdir build && cd build
        cmake .. \
          -G Ninja \
          -DCMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }} \
          -DLAF_BACKEND=skia \
          -DSKIA_DIR="${{ github.workspace }}/deps/skia" \
          -DSKIA_LIBRARY_DIR="${{ github.workspace }}/deps/skia/out/Release-x64" \
          -DSKIA_LIBRARY="${{ github.workspace }}/deps/skia/out/Release-x64/libskia.a"
        
        ninja aseprite

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: aseprite-${{ runner.os }}-${{ env.ASEPRITE_VERSION }}
        path: aseprite/build/bin/
        retention-days: 30